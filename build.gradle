buildscript {
    ext {

        kotlin_version = '1.4.10'
        material_version = '1.3.0-alpha03'

        kotlinAndroid = [
                stdlib: "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        ]

        androidx = [
                appcompat       : "androidx.appcompat:appcompat:1.3.0-alpha02",
                activity        : "androidx.activity:activity-ktx:1.2.0-beta01",
                fragment        : "androidx.fragment:fragment-ktx:1.3.0-beta01",
                ktx             : "androidx.core:core-ktx:1.5.0-alpha04",
                recyclerview    : "androidx.recyclerview:recyclerview:1.2.0-alpha06",
                constraintlayout: "androidx.constraintlayout:constraintlayout:2.0.1",
                preference      : "androidx.preference:preference:1.1.1",

                navigation      : [
                        fragment: 'androidx.navigation:navigation-fragment-ktx:2.3.0',
                        ui      : 'androidx.navigation:navigation-ui-ktx:2.3.0'
                ],

                lifecycle       : [
                        livedata: "androidx.lifecycle:lifecycle-livedata-ktx:2.3.0-beta01",
                        runtime : "androidx.lifecycle:lifecycle-runtime:2.3.0-beta01"
                ]
        ]

        koin = "org.koin:koin-androidx-scope:2.1.6"

        material = "com.google.android.material:material:$material_version"

        play = [
                core: "com.google.android.play:core:1.8.3",
                ktx : "com.google.android.play:core-ktx:1.8.1"
        ]

        licenses = "com.google.android.gms:play-services-oss-licenses:17.0.0"
    }
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.0-alpha13'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.android.gms:oss-licenses-plugin:0.10.2'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

enum VersionSuffix {
    ALPHA(0, "alpha"), BETA(1, "beta"), PRODUCT(9, "")

    private final int code
    private final String name

    VersionSuffix(int code, String name) {
        this.code = code
        this.name = name
    }

    int getCode() {
        code
    }

    String getName() {
        name
    }
}

ext {
    def appMajor = 1
    def appMinor = 6
    def appPatch = 1
    def appBuild = 0

    def suffix = VersionSuffix.PRODUCT

    appVersionCode = appMajor * 1000000 + appMinor * 10000 + appPatch * 1000 + suffix.code * 100 + appBuild
    appVersionName = suffix == VersionSuffix.PRODUCT ?
            "${appMajor}.${appMinor}.${appPatch}" :
            "${appMajor}.${appMinor}.${appPatch}-${suffix.name} ${appBuild}"
}